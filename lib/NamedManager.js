// Generated by CoffeeScript 1.10.0
(function() {
  var $, EventEmitter, Named, NamedManager,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Named = require("./Named");

  EventEmitter = require("eventemitter3");

  $ = require("jquery");

  NamedManager = (function(superClass) {
    extend(NamedManager, superClass);

    function NamedManager() {
      NamedManager.__super__.constructor.call(this);
      this.element = document.createElement("div");
      this.namedies = [];
      this.destructors = [];
      this.initDOMStructure();
      this.initStyle();
      this.initEventListener();
    }

    NamedManager.prototype.initDOMStructure = function() {
      this.$namedMgr = $(this.element).addClass("namedMgr");
    };

    NamedManager.prototype.initStyle = function() {
      var $style;
      this.$namedMgr.css({
        bottom: "0px",
        right: "0px",
        position: "fixed"
      });
      $style = $("<style scoped />").text(".scope {\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n  pointer-events: none;\n  user-select: none;\n  -webkit-tap-highlight-color: transparent;\n}\n.surface {\n  user-select: none;\n}\n.surfaceCanvas {\n  user-select: none;\n  pointer-events: auto;\n}\n.blimp {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  pointer-events: auto;\n}\n.blimpCanvas {\n  user-select: none;\n}").appendTo(this.$namedMgr);
    };

    NamedManager.prototype.initEventListener = function() {};

    NamedManager.prototype.destructor = function() {
      this.namedies.forEach(function(named) {
        return named.destructor();
      });
      this.namedies = [];
      this.destructors.forEach(function(fn) {
        return fn();
      });
      this.$namedMgr.children().remove();
      this.$namedMgr.remove();
    };

    NamedManager.prototype.materialize = function(shell, balloon) {
      var named, namedId;
      namedId = this.namedies.length;
      named = new Named(namedId, shell, balloon, this);
      this.namedies.push(named);
      this.$namedMgr.append(named.element);
      return namedId;
    };

    NamedManager.prototype.vanish = function(namedId) {
      if (this.namedies[namedId] == null) {
        console.error("namedId " + namedId + " is not used yet");
      }
      this.namedies[namedId].destructor();
      this.namedies[namedId] = null;
      delete this.namedies[namedId];
    };

    NamedManager.prototype.named = function(namedId) {
      if (this.namedies[namedId] == null) {
        console.error("namedId " + namedId + " is not used yet");
        return null;
      }
      return this.namedies[namedId];
    };

    return NamedManager;

  })(EventEmitter);

  module.exports = NamedManager;

}).call(this);
